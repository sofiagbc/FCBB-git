sudo R
install.packages(‘klaR’)
install.packages(‘klaR’)
install.packages("klaR")
install.packages("klaR")
install.packages("el071")
install.packages("el071")
set.seed(3)
install.packages("el071")
install.packages("el071")
install.packages("klaR")
install.packages("e1071")
install.packages("ROCR")
install.packages("kernlab")
library("kernlab")
library("ROCR")
library("klaR")
library("kLaR")
install.packages("MASS")
install.packages("MASS")
library("klaR")
library("e1071")
pred <- prediction(prediction_scores, true_labels)
boxplot(Sepal.Length~Species,data=iris)
data(iris)
head(iris)
summary(iris)
boxplot(Sepal.Length~Species,data=iris)
boxplot(Sepal.Length~Species,data=iris)
pairs(iris[1:4], main = “Iris Data", pch = 21, bg = c("red", "green3",
"blue")[unclass(iris$Species)])
pairs(iris[1:4], main = “Iris Data", pch = 21, bg = c("red", "green3",
"blue")[unclass(iris$Species)])
pairs(iris[1:4], main="Iris Data", pch=21, bg=c("red","green3","blue")[unclass(iris$Species)])
data(spam)
head(spam)
summary(spam)
set.seed(3)
data(spam)
head(spam)
split_dummy <- sample(c(rep(0, 0.8 * nrow(data)),  # Create dummy for splitting
rep(1, 0.2 * nrow(data))))
split_dummy <- sample(c(rep(0, 0.8 * nrow(data)),rep(1, 0.2 * nrow(data))))
testidx <- which(1:length(spam[,1])%%5 == 0)
iristrain <- iris[-testidx,]
iristest <- iris[testidx,]
iristest
length(spam)
length(iris)
length(iris[,1])
length(spam[,1])
4601*0.2
testidx <- which(1:length(spam[,1])*0.2 == 0)
iristrain <- spam[-testidx,]
iristest <- spam[-testidx,]
length(iristrain)
testidx <- which(1:length(spam[,1])%%5 == 0)
testidx <- which(1:length(spam[,1])*0.2 == 0)
testidx <- which(1:length(spam[,1])%%5 == 0)
4601*0.2
iristrain <- spam[-testidx,]
iristest <- spam[-testidx,]
iristrain <- spam[-testidx,]
iristest <- spam[testidx,]
testidx <- which(1:length(spam[,1])%%5 == 0)
model <- svm(Species~., data=train)
library(kernlab)
set.seed(3)
library(kernlab)
library(e1071)
data(spam)
# split into train 80%, test 20%
testidx <- which(1:length(spam[,1])%%5 == 0)
train <- spam[-testidx,]
test <- spam[testidx,]
model <- svm(Species~., data=train)
View(spam)
View(spam)
View(spam)
model <- svm(make~., data=train)
View(model)
? svm
? ~
summary(model)
help("~")
prediction <- predict(model, test)
table(test$make, prediction)
table(test$make, prediction)
source("C:/Users/toshiba/Desktop/Sofía/Spring 2022/FCBB/New folder/ex1.R")
source("C:/Users/toshiba/Desktop/Sofía/Spring 2022/FCBB/New folder/ex1.R")
source("C:/Users/toshiba/Desktop/Sofía/Spring 2022/FCBB/New folder/ex1.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SomaticSignatures")
library('getopt')
args <- commandArgs(TRUE)
print(args)
spec = matrix(c("input", "i", 1, "character","output", "o", 1, "character"), byrow=TRUE, ncol=4)
opt=getopt(spec)
print(opt)
input <- opt$input
output <- opt$output
data_input <- read.table(input, header=TRUE, sep= "\t")
m=length(data_input$index)
data_input$pvalue <- as.numeric(as.character(data_input$pvalue))
data_sorted <- order(data_input$pvalue)
data <- data_input
data$index <- rep(0,m)
data$pvalue <- rep(0,m)
data$qvalue <- rep(0,m)
for (i in 1:m) {
num=data_sorted[i]
data$index[i]=num
data$pvalue[i]=data_input$pvalue[num]
}
fdr=0.05
data$qvalue <- rep(0,m)
flag <- 0
for (i in 1:m) {
data$qvalue[i] <- data$pvalue[i]*m/i
if (data$qvalue[i]>fdr & flag==0) {
index <- i-1
flag <- 1
}
}
print(paste("Number of discoveries at fdr<=0.05 is", index))
data$pvalue <- round(data$pvalue,6)
data$qvalue <- round(data$qvalue,6)
write.table(data,output,quote=FALSE, sep="\t",row.names=FALSE)
library('getopt')
args <- commandArgs(TRUE)
print(args)
spec = matrix(c("input", "i", 1, "character","output", "o", 1, "character"), byrow=TRUE, ncol=4)
opt=getopt(spec)
print(opt)
input <- opt$input
output <- opt$output
data_input <- read.table(input, header=TRUE, sep= "\t")
setwd("C:/Users/toshiba/Desktop/Sofía/Spring 2022/FCBB/FCBB-git/Week 6")
